var acorn = require('acorn')
var walk = require('acorn/util/walk')

function expr(ex) {
  if (!(this instanceof expr)) {
    return new expr(ex)
  }

  this.ast = acorn.parse(ex)

  if (this.ast.body[0].type !== 'ExpressionStatement') {
    throw new Error('expected an ExpressionStatement')
  }

  this.fn = compile(this.ast)
  var symbols = []
  this.symbols = symbols
  walk.simple(this.ast, {
    Identifier: function (node) {
      symbols.push(node.name)
    }
  })

  this.match = Function('vals', 'with(vals){ return ' + ex + '}')

  //console.log(JSON.stringify(this.ast, null, 2))
}

expr.prototype.match = function (vals) {
  var fn = this.fn || (this.fn = compile(this.ast))
  return fn(vals)
}

function compile(ast) {
  var expr = ast.body[0]
  return function (vals) {
    return true
  }
}

module.exports = expr